program → START block END.
block → { commands_list }.
commands_list → commands ; commands_list | commands ; .

commands → display | displayln | declare | assign | if-then | if-then-else | while | for | for-in-range | ternary | expr | block .
declare → DATATYPE identifier |  DATATYPE identifier = value.
assign → identifier ASSIGNOP expr | identifier ASSIGNOP ternary | identifier++ | identifier--.
if-else → IF ( compositeBool ) THEN block | IF ( compositeBool ) THEN block ELSE block.

value → string | number | true | false.

for → FOR (loopScope) block| FOR VARCHAR IN RANGE ( NUMBERS,NUMBERS ) block.
loopScope →  assign DELIMITER compositeBool DELIMITER assign.
while → WHILE ( compositebool ) block.

ternary → ( compositebool ) TERNARYOP expr TERNARYOP1 expr.

display → DISPLAY expr|DISPLAY member.
compositeBool → bool_expr | bool_expr AND compositeBool | bool_expr OR compositeBool | expr.
bool_expr → expr | expr COMPAREOP expr | NOT expr | BOOL.
expr → component ADDSUB expr | component.
component → member MULDIV component | member .
member → NUMBERS|VARCHAR.

NUMBERS → ^[0-9]+$
VARCHAR → ^[a-zA-Z_$][a-zA-Z_$0-9]*$
ALPHANUMERIC→ ^[a-zA-Z_$0-9]*$
DISPLAY → display
ASSIGNOP → ‘=’
COMPAREOP → ‘<=’ | ‘<’ | ‘>’ | ‘>=’ | ‘==’ | ‘~’
BOOL → true | false.
ADDSUB → '+'|'-'.
MULDIV → '*'|'/'.
START → start.
END → end.

DATATYPE → int | bool | string .
COMPOSITEBOOLOP → AND | OR
TERNARYOP → ?
TERNARYOP1 → :
IF → if.
ELSE → else.
THEN → then.
FOR → for.
WHILE → while.
IN → in.
RANGE → range.
